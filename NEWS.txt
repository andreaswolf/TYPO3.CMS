This document is a part of the TYPO3 project. TYPO3 is an open source web
content management system released under the GNU GPL. TYPO3 is copyright
(c) 1999-2011 by Kasper Skaarhoj.

This document contains information about TYPO3 version 4.6 which was released
on October, 25th 2011.

An up-to-date version of this document also containing links to further in
depth information can be found here:

http://wiki.typo3.org/TYPO3_4.6

===============================================================================
Compatibility
===============================================================================

* PHP 5.3

This version requires at least PHP 5.3, older versions of PHP are not supported
anymore with TYPO3 4.6.

* ImageMagick/GraphicsMagick

...

* PHP __constructor() methods

The old PHP 4 style class constructors, which have been the same as the class
name have been changed to use the PHP 5 __constructor() syntax. This is
considered as breaking change if extension called the old contructor of an
object directly.

===============================================================================
Changes and improvements
===============================================================================

This will list all changes and improvements between TYPO3 4.5 and 4.6. For
technical details see ChangeLog included in the typo3_src package.

-------------------------------------------------------------------------------
General
-------------------------------------------------------------------------------

-...

Removed functionality
-------------------------------------------------------------------------------

* Static Published Pages

The feature to statically publish a page from the Admin Panel has been dropped.
There are better ways to achieve such a functionality, like e.g.
EXT:nc_staticfilecache.

* Removed extCache=2 option

The cache files in typo3conf/temp_CACHED_* were by default set to a hash that
was based on the extensionlist, but this is quite unnecessary, so the extCache
option was removed to be only used once in the typo3conf/ directory in order
to prevent hundreds of temp_CACHED_* files that don't get cleaned up
automatically. From now on the option $TYPO3_CONF_VARS['EXT']['extCache'] can
only be set to 0 or 1.


Workspaces
-------------------------------------------------------------------------------

...

Other general improvements
-------------------------------------------------------------------------------

* New scheduler task to delete old data from tables

The scheduler task 'Table garbage collection' can be used to delete old data
from growing tables like log tables on a regular basis. Additional tables that
can be cleaned up must be registered in $TYPO3_CONF_VARS['SC_OPTIONS']
['scheduler']['tasks']['tx_scheduler_TableGarbageCollection']['options']
['tables'] with its table name and a field. After that they can
be selected in the scheduler task.


* New scheduler task to delete old files from fileadmin trash directories

The scheduler task 'Fileadmin recycler garbage collection' can be used to
definitely delete old files from _recycler_ directories. When a _recycler_
directory exists within the path of a file to delete via the File module, the
file is not actually deleted, but stored in the _recycler_ folder.
This new task now deletes all files insider _recycler_ folders that have been
moved there for longer than a given number of days.

* New option to customize the cookie names used by TYPO3

It is now possible to customize the cookie names used by TYPO3 to avoid clashes
when running more installations on the same domain. The names used can be con-
figured with:
$TYPO3_CONF_VARS['FE']['cookieName'] and
$TYPO3_CONF_VARS['BE']['cookieName'].

* Moved t3d exports to fileadmin/_temp_ directory

t3d packages exported by the import / extbase extension are now stored in
fileadmin/_temp_ by default which is access restricted by default .htaccess
rules.

* Added "IDNA Convert" libray for Internationalized Domain Names (IDN)

The new library can be found in typo3/contrib/idna/ and is used to encode and
decode internationalized domain names (containing special characters like
umlauts) from and to punycode.

-------------------------------------------------------------------------------
Backend
-------------------------------------------------------------------------------

RTEhtmlarea
-------------------------------------------------------------------------------

...

Other improvements to the Backend
-------------------------------------------------------------------------------

* Backend speedup with merged JavaScript files

All jsLibs, jsFiles and jsFooterFiles are now concatenated by default into
single files depending on type and section (header / footer). This reduces
the webserver requests approximately by one third.

-------------------------------------------------------------------------------
Skin / Backend UI
-------------------------------------------------------------------------------

...

Other Improvements in the Skin / Backend UI
-------------------------------------------------------------------------------

...

-------------------------------------------------------------------------------
Administration / Customization
-------------------------------------------------------------------------------

...

Install tool
-------------------------------------------------------------------------------

...

-------------------------------------------------------------------------------
Development
-------------------------------------------------------------------------------

Extbase / Fluid
-------------------------------------------------------------------------------

...

Although we do our best to make adjustments in a backwards-compatible manner,
we needed to break backwards compatibility at a few places. In order to see if
you are affected and how the issues can be solved, please read our notes on
breaking changes:

http://forge.typo3.org/projects/typo3v4-mvc/wiki/Breaking_Changes

Backend Development
-------------------------------------------------------------------------------

...

Extension Development
-------------------------------------------------------------------------------

...

TypoScript / Frontend
-------------------------------------------------------------------------------

* Compression and concatenation of CSS and JavaScript files

New builtin minification routines can now be used with config.compressCss and
config.compressJs to reduce the file size of all files configured in
page.includeCSS and page.includeJS. Single files can be excluded from
compression using the new option disableCompression. Additionally, files can
be concatenated into a single file using config.concatenateCss and
config.concatenateJs. Please note that there is only limited support for
@charset, @import and @namespace statements in concatenated CSS files.
Furthermore, if compressCss/compressJs is enabled,
$TYPO3_CONF_VARS[FE][compressionLevel] now also affects CSS and JS files in
frontend and applies GZIP compression. This requires the same options as for
[BE][compressionLevel] to be set in .htaccess.



Database API / DBAL
-------------------------------------------------------------------------------

...

-------------------------------------------------------------------------------
Security
-------------------------------------------------------------------------------

...

-------------------------------------------------------------------------------
Performance
-------------------------------------------------------------------------------

* Switch to caching framework

The caching framework is enabled by default and the old database-only driven
caching is removed. This opens a lot of options for administrators to optimize
cache deployment and performance. Details about configuration options and usage
in own extensions can be found at http://wiki.typo3.org/Caching_framework.


* Caching framework: db backend uses own table namespace

The database backend must not define own tables and table definitions anymore.
Cache tables and table layout of the database backend will created by the
caching framework when needed.
